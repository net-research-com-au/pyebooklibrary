name: Test pdf functions

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.12' # 3.x for generic version
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # Dependency management
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.12'
            architecture: 'x64'

        - name: Restore cached dependencies
          uses: actions/cache@v3
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

        # Run python testing
        - name: python testing
          run: |
            pip install pytest
            pytest -v --doctest-modules --junitxml=junit/test-results.xml
        - name: Upload pytest test results
          uses: actions/upload-artifact@v4
          with:
            name: pytest-results
            path: junit/test-results.xml
            # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}
